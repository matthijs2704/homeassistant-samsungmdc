name: release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      # Validate the integration for use in HACS
      - name: HACS validation
        uses: "hacs/action@main"
        with:
          category: "integration"

      - name: Gets semantic release info
        id: semantic_release_info
        uses: jossef/action-semantic-release-info@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Update Version and Commit   
        if: ${{steps.semantic_release_info.outputs.version != ''}}
        run: |
          echo "Version: ${{steps.semantic_release_info.outputs.version}}"
          sed -i "s/\"version\": \".*\",/\"version\": \"${{steps.semantic_release_info.outputs.version}}\",/g" custom_components/samsungmdc/manifest.json
          git add -A
          git commit -m "chore: bumping version to ${{steps.semantic_release_info.outputs.version}}"
          git tag ${{ steps.semantic_release_info.outputs.git_tag }}
          
      - name: Push changes
        if: ${{steps.semantic_release_info.outputs.version != ''}}
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ github.token }}
          tags: true
          branch: ${{ github.ref }}

      - name: Create GitHub Release
        if: ${{steps.semantic_release_info.outputs.version != ''}}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ steps.semantic_release_info.outputs.git_tag }}
          release_name: ${{ steps.semantic_release_info.outputs.git_tag }}
          body: ${{ steps.semantic_release_info.outputs.notes }}
          draft: false
          prerelease: false

      - name: Archive Release
        if: ${{steps.semantic_release_info.outputs.version != ''}}
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'samsungmdc.zip'
          exclusions: '*.git*'

      - name: Upload Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: samsungmdc.zip
          asset_name: samsungmdc.zip
          asset_content_type: application/zip